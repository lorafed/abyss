#pragma once
#include "pch.hpp"
#include "types/vec2.hpp"
#include "types/vec3.hpp"
#include "types/vec4.hpp"
#include "types/aabb.hpp"
#include "types/matrix.hpp"

#include <array>
#include "imgui/imgui.h"

namespace helpers
{
	namespace render
	{
		unsigned long long load_texture(void* buffer, int size);

		//vec3<double> target, s_matrix model_view, s_matrix projection, vec2<float> screen_size, vec2<float>& screen_position
		bool world2screen(const matrix& projection, const matrix& model_view, const vec2<float>& screen_size, const vec3<double>& position, vec2<float>& screen_position);
		matrix calculate_projection(const vec2<float>& screen_size, float fov);
		matrix caclulate_modelview(const vec2<float>& angles);

		inline static constexpr std::array<float, 181> PITCH_LOOKUP =
		{
			-1.72f,     // -90
			1.52f,      // -89
			1.51975f,   // -88
			1.51901f,   // -87
			1.51778f,   // -86
			1.51605f,   // -85
			1.51384f,   // -84
			1.51113f,   // -83
			1.50792f,   // -82
			1.50423f,   // -81
			1.50006f,   // -80
			1.49539f,   // -79
			1.49024f,   // -78
			1.4846f,    // -77
			1.47848f,   // -76
			1.47188f,   // -75
			1.4648f,    // -74
			1.45724f,   // -73
			1.44921f,   // -72
			1.44071f,   // -71
			1.43174f,   // -70
			1.4223f,    // -69
			1.4124f,    // -68
			1.40204f,   // -67
			1.39122f,   // -66
			1.37994f,   // -65
			1.36822f,   // -64
			1.35605f,   // -63
			1.34343f,   // -62
			1.33038f,   // -61
			1.31688f,   // -60
			1.30296f,   // -59
			1.28861f,   // -58
			1.27384f,   // -57
			1.25865f,   // -56
			1.24304f,   // -55
			1.22703f,   // -54
			1.21061f,   // -53
			1.19379f,   // -52
			1.17658f,   // -51
			1.15898f,   // -50
			1.14099f,   // -49
			1.12263f,   // -48
			1.10389f,   // -47
			1.08479f,   // -46
			1.06533f,   // -45
			1.04551f,   // -44
			1.02535f,   // -43
			1.00484f,   // -42
			0.983992f,  // -41
			0.962816f,  // -40
			0.941316f,  // -39
			0.919499f,  // -38
			0.897372f,  // -37
			0.87494f,   // -36
			0.852212f,  // -35
			0.829194f,  // -34
			0.805892f,  // -33
			0.782315f,  // -32
			0.758469f,  // -31
			0.734362f,  // -30
			0.71f,      // -29
			0.685392f,  // -28
			0.660544f,  // -27
			0.635465f,  // -26
			0.610161f,  // -25
			0.584642f,  // -24
			0.558913f,  // -23
			0.532984f,  // -22
			0.506863f,  // -21
			0.480556f,  // -20
			0.454073f,  // -19
			0.42742f,   // -18
			0.400608f,  // -17
			0.373642f,  // -16
			0.346533f,  // -15
			0.319287f,  // -14
			0.291913f,  // -13
			0.264421f,  // -12
			0.236817f,  // -11
			0.209111f,  // -10
			0.18131f,   // -9
			0.153424f,  // -8
			0.12546f,   // -7
			0.0974283f, // -6
			0.0693361f, // -5
			0.0411923f, // -4
			0.0130055f, // -3
			-0.0152157f,// -2
			-0.0434628f,// -1
			-0.0717271f,// 0
			-0.1f,      // +1
			-0.128273f, // +2
			-0.156537f, // +3
			-0.184784f, // +4
			-0.213005f, // +5
			-0.241192f, // +6
			-0.269336f, // +7
			-0.297428f, // +8
			-0.32546f,  // +9
			-0.353424f, // +10
			-0.38131f,  // +11
			-0.409111f, // +12
			-0.436817f, // +13
			-0.464421f, // +14
			-0.491913f, // +15
			-0.519287f, // +16
			-0.546533f, // +17
			-0.573642f, // +18
			-0.600608f, // +19
			-0.62742f,  // +20
			-0.654073f, // +21
			-0.680556f, // +22
			-0.706863f, // +23
			-0.732984f, // +24
			-0.758913f, // +25
			-0.784642f, // +26
			-0.810161f, // +27
			-0.835465f, // +28
			-0.860544f, // +29
			-0.885392f, // +30
			-0.91f,     // +31
			-0.934362f, // +32
			-0.958469f, // +33
			-0.982315f, // +34
			-1.00589f,  // +35
			-1.02919f,  // +36
			-1.05221f,  // +37
			-1.07494f,  // +38
			-1.09737f,  // +39
			-1.1195f,   // +40
			-1.14132f,  // +41
			-1.16282f,  // +42
			-1.18399f,  // +43
			-1.20484f,  // +44
			-1.22535f,  // +45
			-1.24551f,  // +46
			-1.26533f,  // +47
			-1.28479f,  // +48
			-1.30389f,  // +49
			-1.32263f,  // +50
			-1.34099f,  // +51
			-1.35898f,  // +52
			-1.37658f,  // +53
			-1.39379f,  // +54
			-1.41061f,  // +55
			-1.42703f,  // +56
			-1.44304f,  // +57
			-1.45865f,  // +58
			-1.47384f,  // +59
			-1.48861f,  // +60
			-1.50296f,  // +61
			-1.51688f,  // +62
			-1.53038f,  // +63
			-1.54343f,  // +64
			-1.55605f,  // +65
			-1.56822f,  // +66
			-1.57994f,  // +67
			-1.59122f,  // +68
			-1.60204f,  // +69
			-1.6124f,   // +70
			-1.6223f,   // +71
			-1.63174f,  // +72
			-1.64071f,  // +73
			-1.64921f,  // +74
			-1.65724f,  // +75
			-1.6648f,   // +76
			-1.67188f,  // +77
			-1.67848f,  // +78
			-1.6846f,   // +79
			-1.69024f,  // +80
			-1.69539f,  // +81
			-1.70006f,  // +82
			-1.70423f,  // +83
			-1.70792f,  // +84
			-1.71113f,  // +85
			-1.71384f,  // +86
			-1.71605f,  // +87
			-1.71778f,  // +88
			-1.71901f,  // +89
			-1.71975f   // +90
		};

		constexpr float get_eye_vertical_point(int pitch) {
			return PITCH_LOOKUP[std::clamp(pitch, -90, 90) + 90];
		}
	}

	namespace gui
	{
		struct keybind {
			int vk_code = 0;  
			bool is_waiting = false;
		};

		int imgui_vk(ImGuiKey key);

		const char* get_vk_name(int vk);

		bool key_bind_button(const char* label, keybind* bind);
	}
}